// <auto-generated />
using System;
using DataImporter.Core.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataImporter.Web.Data.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    partial class CoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataImporter.Core.Entities.Cell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeaderId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("RowId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.HasIndex("RowId");

                    b.ToTable("Cells");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HeaderId = 1,
                            Position = 1,
                            RowId = 1,
                            Value = "One"
                        },
                        new
                        {
                            Id = 2,
                            HeaderId = 2,
                            Position = 2,
                            RowId = 1,
                            Value = "10"
                        },
                        new
                        {
                            Id = 3,
                            HeaderId = 3,
                            Position = 3,
                            RowId = 1,
                            Value = "one@mail.com"
                        },
                        new
                        {
                            Id = 4,
                            HeaderId = 4,
                            Position = 4,
                            RowId = 1,
                            Value = "200.11"
                        },
                        new
                        {
                            Id = 5,
                            HeaderId = 1,
                            Position = 1,
                            RowId = 2,
                            Value = "Two"
                        },
                        new
                        {
                            Id = 6,
                            HeaderId = 2,
                            Position = 2,
                            RowId = 2,
                            Value = "20"
                        },
                        new
                        {
                            Id = 7,
                            HeaderId = 3,
                            Position = 3,
                            RowId = 2,
                            Value = "two@mail.com"
                        },
                        new
                        {
                            Id = 8,
                            HeaderId = 4,
                            Position = 4,
                            RowId = 2,
                            Value = "200.20"
                        });
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Contact", b =>
                {
                    b.Property<int>("CellId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("HeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowId")
                        .HasColumnType("int");

                    b.Property<int>("TotalFiltered")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CellId");

                    b.HasIndex("HeaderId");

                    b.HasIndex("RowId");

                    b.ToTable("Contact", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Export", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageFileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Exports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(5024),
                            DisplayFileName = "File-1.xlsx",
                            Email = "email1@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "fcbea8cd-1d91-4dc5-ab84-468b55495595.xlsx"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7704),
                            DisplayFileName = "File-2.xlsx",
                            Email = "email2@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "8b12feb7-407d-477d-ae14-8a38ccbc8ee1.xlsx"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7745),
                            DisplayFileName = "File-3.xlsx",
                            Email = "email3@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "901e959f-f224-4229-aee7-c92a2a14b1c1.xlsx"
                        },
                        new
                        {
                            Id = 4,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7755),
                            DisplayFileName = "File-4.xlsx",
                            Email = "email4@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "0524825f-1366-403d-8fb7-67c802a9069e.xlsx"
                        },
                        new
                        {
                            Id = 5,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7771),
                            DisplayFileName = "File-5.xlsx",
                            Email = "email5@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "10b2e232-0056-4475-8a09-3436e20e3e6e.xlsx"
                        },
                        new
                        {
                            Id = 6,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7778),
                            DisplayFileName = "File-6.xlsx",
                            Email = "email6@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "256c5f50-cb82-41d4-a38b-bcef93eb13ef.xlsx"
                        },
                        new
                        {
                            Id = 7,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7786),
                            DisplayFileName = "File-7.xlsx",
                            Email = "email7@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "568943b4-79b4-4459-946a-39fbe851ef49.xlsx"
                        },
                        new
                        {
                            Id = 8,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7794),
                            DisplayFileName = "File-8.xlsx",
                            Email = "email8@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "74633d3a-8fb3-4d72-afed-c81f2d141fe9.xlsx"
                        },
                        new
                        {
                            Id = 9,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7801),
                            DisplayFileName = "File-9.xlsx",
                            Email = "email9@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "3624a2e2-f98d-4209-8b46-737720f03e43.xlsx"
                        },
                        new
                        {
                            Id = 10,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7808),
                            DisplayFileName = "File-10.xlsx",
                            Email = "email10@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "156de451-47a0-4997-8d33-2292c2351218.xlsx"
                        },
                        new
                        {
                            Id = 11,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7816),
                            DisplayFileName = "File-11.xlsx",
                            Email = "email11@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "57499074-e8dc-4ddb-9a3f-d8720076a236.xlsx"
                        },
                        new
                        {
                            Id = 12,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7824),
                            DisplayFileName = "File-12.xlsx",
                            Email = "email12@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "e556cdb1-25f7-41cd-9f30-b0ce1551706b.xlsx"
                        },
                        new
                        {
                            Id = 13,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7911),
                            DisplayFileName = "File-13.xlsx",
                            Email = "email13@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "3e3068d6-5768-415a-ba5a-1622ac6fed1f.xlsx"
                        },
                        new
                        {
                            Id = 14,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7918),
                            DisplayFileName = "File-14.xlsx",
                            Email = "email14@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "c62386db-f677-470f-b201-75b0d221c986.xlsx"
                        },
                        new
                        {
                            Id = 15,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(7937),
                            DisplayFileName = "File-15.xlsx",
                            Email = "email15@mail.com",
                            EmailStatus = "Done",
                            Status = "Done",
                            StorageFileName = "656926d6-0264-439f-86f8-e9641d32f28c.xlsx"
                        });
                });

            modelBuilder.Entity("DataImporter.Core.Entities.ExportGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExportId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExportId");

                    b.HasIndex("GroupId");

                    b.ToTable("ExportGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExportId = 1,
                            GroupId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExportId = 2,
                            GroupId = 2
                        },
                        new
                        {
                            Id = 3,
                            ExportId = 3,
                            GroupId = 3
                        },
                        new
                        {
                            Id = 4,
                            ExportId = 4,
                            GroupId = 4
                        },
                        new
                        {
                            Id = 5,
                            ExportId = 5,
                            GroupId = 5
                        },
                        new
                        {
                            Id = 6,
                            ExportId = 6,
                            GroupId = 6
                        },
                        new
                        {
                            Id = 7,
                            ExportId = 7,
                            GroupId = 7
                        },
                        new
                        {
                            Id = 8,
                            ExportId = 8,
                            GroupId = 8
                        },
                        new
                        {
                            Id = 9,
                            ExportId = 9,
                            GroupId = 9
                        },
                        new
                        {
                            Id = 10,
                            ExportId = 10,
                            GroupId = 10
                        },
                        new
                        {
                            Id = 11,
                            ExportId = 11,
                            GroupId = 11
                        },
                        new
                        {
                            Id = 12,
                            ExportId = 12,
                            GroupId = 12
                        },
                        new
                        {
                            Id = 13,
                            ExportId = 13,
                            GroupId = 13
                        },
                        new
                        {
                            Id = 14,
                            ExportId = 14,
                            GroupId = 14
                        },
                        new
                        {
                            Id = 15,
                            ExportId = 15,
                            GroupId = 15
                        });
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 1"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 2"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 3"
                        },
                        new
                        {
                            Id = 4,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 4"
                        },
                        new
                        {
                            Id = 5,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 5"
                        },
                        new
                        {
                            Id = 6,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 6"
                        },
                        new
                        {
                            Id = 7,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 7"
                        },
                        new
                        {
                            Id = 8,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 8"
                        },
                        new
                        {
                            Id = 9,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 9"
                        },
                        new
                        {
                            Id = 10,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 10"
                        },
                        new
                        {
                            Id = 11,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 11"
                        },
                        new
                        {
                            Id = 12,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 12"
                        },
                        new
                        {
                            Id = 13,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 13"
                        },
                        new
                        {
                            Id = 14,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 14"
                        },
                        new
                        {
                            Id = 15,
                            ApplicationUserId = new Guid("00000000-0000-0000-0000-0000000000a1"),
                            Name = "Group 15"
                        });
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Header", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Headers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupId = 1,
                            Name = "Name",
                            Position = 1
                        },
                        new
                        {
                            Id = 2,
                            GroupId = 1,
                            Name = "Age",
                            Position = 2
                        },
                        new
                        {
                            Id = 3,
                            GroupId = 1,
                            Name = "Email",
                            Position = 3
                        },
                        new
                        {
                            Id = 4,
                            GroupId = 1,
                            Name = "Salary",
                            Position = 4
                        });
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Import", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageFileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Imports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(290),
                            DisplayFileName = "File-1.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "d003dcd8-0ea0-4ace-af41-035ca1076625.xlsx"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(654),
                            DisplayFileName = "File-2.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "cbcad55d-cfb3-46e9-a9d7-b1022adf8a7b.xlsx"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(677),
                            DisplayFileName = "File-3.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "238c64a3-60ee-4df5-8cfb-902fb5c97558.xlsx"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(684),
                            DisplayFileName = "File-4.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "1527bd53-b7de-4e12-8879-5e75938048d8.xlsx"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(787),
                            DisplayFileName = "File-5.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "17d113f0-168e-4e0c-8f84-4a419b0c7ea8.xlsx"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(794),
                            DisplayFileName = "File-6.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "52d8a50b-b9c8-48ba-9c53-654f47d33946.xlsx"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(799),
                            DisplayFileName = "File-7.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "effcb46b-77bb-4e10-8831-f9ea13de3566.xlsx"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(804),
                            DisplayFileName = "File-8.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "3d18eb8e-009a-4e02-9eb1-1c9237603b68.xlsx"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(810),
                            DisplayFileName = "File-9.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "e69a259c-4305-49cf-83d3-59d9fc3ea553.xlsx"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(815),
                            DisplayFileName = "File-10.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "02a7ed3c-a32b-4b92-adef-b09845b15742.xlsx"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(823),
                            DisplayFileName = "File-11.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "b4a14f7e-cd8f-481a-9dcb-897a46f3397b.xlsx"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(860),
                            DisplayFileName = "File-12.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "e6997c47-c582-4d90-a1e1-d23ec800d3b9.xlsx"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(866),
                            DisplayFileName = "File-13.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "f26bb57e-57e6-4ce7-882c-0a79eed56f8f.xlsx"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(873),
                            DisplayFileName = "File-14.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "31111680-ed1d-491c-87d5-18778c3215e8.xlsx"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 428, DateTimeKind.Local).AddTicks(879),
                            DisplayFileName = "File-15.xlsx",
                            GroupId = 1,
                            Status = "Done",
                            StorageFileName = "a1a105de-ea71-445f-b76b-abef07b58007.xlsx"
                        });
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Row", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Rows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 424, DateTimeKind.Local).AddTicks(9435),
                            GroupId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 10, 7, 22, 10, 38, 426, DateTimeKind.Local).AddTicks(2826),
                            GroupId = 1
                        });
                });

            modelBuilder.Entity("DataImporter.Membership.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Cell", b =>
                {
                    b.HasOne("DataImporter.Core.Entities.Header", "Header")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DataImporter.Core.Entities.Row", "Row")
                        .WithMany("Cells")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Header");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Contact", b =>
                {
                    b.HasOne("DataImporter.Core.Entities.Cell", "Cell")
                        .WithMany()
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataImporter.Core.Entities.Header", "Header")
                        .WithMany()
                        .HasForeignKey("HeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataImporter.Core.Entities.Row", "Row")
                        .WithMany()
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cell");

                    b.Navigation("Header");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Export", b =>
                {
                    b.HasOne("DataImporter.Membership.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.ExportGroup", b =>
                {
                    b.HasOne("DataImporter.Core.Entities.Export", "Export")
                        .WithMany("ExportGroups")
                        .HasForeignKey("ExportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataImporter.Core.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("Export");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Group", b =>
                {
                    b.HasOne("DataImporter.Membership.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Header", b =>
                {
                    b.HasOne("DataImporter.Core.Entities.Group", "Group")
                        .WithMany("Headers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Import", b =>
                {
                    b.HasOne("DataImporter.Core.Entities.Group", "Group")
                        .WithMany("Imports")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Row", b =>
                {
                    b.HasOne("DataImporter.Core.Entities.Group", "Group")
                        .WithMany("Rows")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Export", b =>
                {
                    b.Navigation("ExportGroups");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Group", b =>
                {
                    b.Navigation("Headers");

                    b.Navigation("Imports");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("DataImporter.Core.Entities.Row", b =>
                {
                    b.Navigation("Cells");
                });
#pragma warning restore 612, 618
        }
    }
}
